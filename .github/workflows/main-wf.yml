name: GitHub Actions Demo
run-name: K8s-Deploy

on:
  workflow_dispatch:
    inputs:
      greeting:
        description: 'A greeting'
        required: false
        default: 'Nope :('

      awsAccessKey:
        description: 'AWS Access Key'
        required: true

      awsSecretAccessKey:
        description: 'AWS Secret Access Key'
        required: true

      aws_region:
        description: 'AWS region to deploy resources'
        required: false
        default: 'us-east-1'

      ec2_count:
        description: 'Number of worker EC2 instances to create'
        required: false
        default: '3'

      ami_id:
        description: 'AMI ID for the EC2 instances'
        required: false
        default: 'ami-04b4f1a9cf54c11d0'

      instance_type:
        description: 'Instance type for the EC2 instances'
        required: false
        default: 't3.micro'

jobs:
  Provision:
    runs-on: ubuntu-latest
    steps:

      # Checkout the repository to access scripts and Terraform files
      - name: Checkout code
        uses: actions/checkout@v3

      # Generate RSA SSH Key and extract the public key in OpenSSH format
      - name: Generate RSA SSH Key
        run: |
          ssh-keygen -t rsa -b 4096 -m PEM -f ssh-key.pem -N ""
          cat ssh-key.pem
          cat ssh-key.pem.pub > ssh-key_pub.pem  # Use the .pub file directly
        id: ssh

      # Make the install script executable
      - name: Make Install Script Executable
        run: chmod +x ./scripts/install-terraform.sh

      # Install Terraform using the provided script
      - name: Install Terraform
        run: ./scripts/install-terraform.sh

      # Initialize and Apply Terraform configuration with AWS credentials set
      - name: Terraform Init and Apply
        env:
          AWS_ACCESS_KEY_ID: ${{ github.event.inputs.awsAccessKey }}
          AWS_SECRET_ACCESS_KEY: ${{ github.event.inputs.awsSecretAccessKey }}
        run: |
          echo "AWS credentials starts with ${AWS_ACCESS_KEY_ID:0:4}"
          cd terraform-files
          terraform init
          terraform apply -auto-approve \
            -var="aws_region=${{ github.event.inputs.aws_region }}" \
            -var="ec2_count=${{ github.event.inputs.ec2_count }}" \
            -var="ami_id=${{ github.event.inputs.ami_id }}" \
            -var="instance_type=${{ github.event.inputs.instance_type }}" \
            -var="ssh_public_key=$(cat ../ssh-key_pub.pem)" \
            -var="s3_object_source=../ssh-key.pem"

      # Greetings Step
      - name: Greetings!
        run: echo "${{ github.event.inputs.greeting }}"
